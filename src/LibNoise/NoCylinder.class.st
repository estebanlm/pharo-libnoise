"
/// Model that defines the surface of a cylinder.
    ///
    /// @image html modelcylinder.png
    ///
    /// This model returns an output value from a noise module given the
    /// coordinates of an input value located on the surface of a cylinder.
    ///
    /// To generate an output value, pass the (angle, height) coordinates of
    /// an input value to the GetValue() method.
    ///
    /// This model is useful for creating:
    /// - seamless textures that can be mapped onto a cylinder
    ///
    /// This cylinder has a radius of 1.0 unit and has infinite height.  It is
    /// oriented along the @a y axis.  Its center is located at the origin.
"
Class {
	#name : 'NoCylinder',
	#superclass : 'NoBaseObject',
	#category : 'LibNoise-Model',
	#package : 'LibNoise',
	#tag : 'Model'
}

{ #category : 'private' }
NoCylinder class >> cylinder_new [
	"/// Constructor."

	self ffiCall: #(no_noise_model_Cylinder* no_noise_model_Cylinder_new_1())
]

{ #category : 'private' }
NoCylinder class >> cylinder_new: module [
	"/// Constructor
	 ///
	 /// @param module The noise module that is used to generate the output
	 /// values."

	self ffiCall: #(no_noise_model_Cylinder* no_noise_model_Cylinder_new_2(no_noise_module_Module* module))
]

{ #category : 'instance creation' }
NoCylinder class >> new [

	^ (self cylinder_new) initialize
]

{ #category : 'instance creation' }
NoCylinder class >> newModule: module [

	^ (self cylinder_new: module) initialize
]

{ #category : 'finalizing' }
NoCylinder >> dispose [

	self ffiCall: #(void no_noise_model_Cylinder_dispose(no_noise_model_Cylinder* self))
]

{ #category : 'public' }
NoCylinder >> getModule [
	"/// Returns the noise module that is used to generate the output
	 /// values.
	 ///
	 /// @returns A reference to the noise module.
	 ///
	 /// @pre A noise module was passed to the SetModule() method."

	self ffiCall: #(no_noise_module_Module* no_noise_model_Cylinder_GetModule(no_noise_model_Cylinder* self))
]

{ #category : 'public' }
NoCylinder >> getValueAngle: angle height: height [
	"/// Returns the output value from the noise module given the
	 /// (angle, height) coordinates of the specified input value located
	 /// on the surface of the cylinder.
	 ///
	 /// @param angle The angle around the cylinder's center, in degrees.
	 /// @param height The height along the @a y axis.
	 ///
	 /// @returns The output value from the noise module.
	 ///
	 /// @pre A noise module was passed to the SetModule() method.
	 ///
	 /// This output value is generated by the noise module passed to the
	 /// SetModule() method.
	 ///
	 /// This cylinder has a radius of 1.0 unit and has infinite height.
	 /// It is oriented along the @a y axis.  Its center is located at the
	 /// origin."

	self ffiCall: #(double no_noise_model_Cylinder_GetValue(no_noise_model_Cylinder* self, double angle, double height))
]

{ #category : 'public' }
NoCylinder >> setModule: module [
	"/// Sets the noise module that is used to generate the output values.
	 ///
	 /// @param module The noise module that is used to generate the output
	 /// values.
	 ///
	 /// This noise module must exist for the lifetime of this object,
	 /// until you pass a new noise module to this method."

	self ffiCall: #(void no_noise_model_Cylinder_SetModule(no_noise_model_Cylinder* self, no_noise_module_Module* module))
]
