"
/// Model that defines the surface of a sphere.
    ///
    /// @image html modelsphere.png
    ///
    /// This model returns an output value from a noise module given the
    /// coordinates of an input value located on the surface of a sphere.
    ///
    /// To generate an output value, pass the (latitude, longitude)
    /// coordinates of an input value to the GetValue() method.
    ///
    /// This model is useful for creating:
    /// - seamless textures that can be mapped onto a sphere
    /// - terrain height maps for entire planets
    ///
    /// This sphere has a radius of 1.0 unit and its center is located at
    /// the origin.
"
Class {
	#name : 'NoSphere',
	#superclass : 'NoBaseObject',
	#category : 'LibNoise-Model',
	#package : 'LibNoise',
	#tag : 'Model'
}

{ #category : 'instance creation' }
NoSphere class >> new [

	^ (self sphere_new) initialize
]

{ #category : 'instance creation' }
NoSphere class >> newModule: module [

	^ (self sphere_new: module) initialize
]

{ #category : 'private' }
NoSphere class >> sphere_new [
	"/// Constructor."

	self ffiCall: #(no_noise_model_Sphere* no_noise_model_Sphere_new_1())
]

{ #category : 'private' }
NoSphere class >> sphere_new: module [
	"/// Constructor
	 ///
	 /// @param module The noise module that is used to generate the output
	 /// values."

	self ffiCall: #(no_noise_model_Sphere* no_noise_model_Sphere_new_2(no_noise_module_Module* module))
]

{ #category : 'finalizing' }
NoSphere >> dispose [

	self ffiCall: #(void no_noise_model_Sphere_dispose(no_noise_model_Sphere* self))
]

{ #category : 'public' }
NoSphere >> getModule [
	"/// Returns the noise module that is used to generate the output
	 /// values.
	 ///
	 /// @returns A reference to the noise module.
	 ///
	 /// @pre A noise module was passed to the SetModule() method."

	self ffiCall: #(no_noise_module_Module* no_noise_model_Sphere_GetModule(no_noise_model_Sphere* self))
]

{ #category : 'public' }
NoSphere >> getValueLat: lat lon: lon [
	"/// Returns the output value from the noise module given the
	 /// (latitude, longitude) coordinates of the specified input value
	 /// located on the surface of the sphere.
	 ///
	 /// @param lat The latitude of the input value, in degrees.
	 /// @param lon The longitude of the input value, in degrees.
	 ///
	 /// @returns The output value from the noise module.
	 ///
	 /// @pre A noise module was passed to the SetModule() method.
	 ///
	 /// This output value is generated by the noise module passed to the
	 /// SetModule() method.
	 ///
	 /// Use a negative latitude if the input value is located on the
	 /// southern hemisphere.
	 ///
	 /// Use a negative longitude if the input value is located on the
	 /// western hemisphere."

	self ffiCall: #(double no_noise_model_Sphere_GetValue(no_noise_model_Sphere* self, double lat, double lon))
]

{ #category : 'public' }
NoSphere >> setModule: module [
	"/// Sets the noise module that is used to generate the output values.
	 ///
	 /// @param module The noise module that is used to generate the output
	 /// values.
	 ///
	 /// This noise module must exist for the lifetime of this object,
	 /// until you pass a new noise module to this method."

	self ffiCall: #(void no_noise_model_Sphere_SetModule(no_noise_model_Sphere* self, no_noise_module_Module* module))
]
